name: Sync Issue With Files

on:
  issues:
    types: [opened, edited, deleted, transferred, pinned, unpinned, closed, reopened, assigned, unassigned, labeled, unlabeled, locked, unlocked, milestoned, demilestoned]
# https://github.com/actions/github-script?tab=readme-ov-file#result-encoding
jobs:
  sync-issue-with-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: posts

      - name: Dump issue to JSON
        id: dump-issue-json
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            fs.writeFileSync(`./post/${context.issue.number}.json`, JSON.stringify(context.payload.issue));
            console.log('context', JSON.stringify(context));
            output = {
              'issue-number': context.issue.number,
              'action': context.payload.action,
              'targets': Object.keys(context.payload.changes),
            };
            console.log('output', output);
            return output;
          # result-encoding: string
      - name: Commit and push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Issue to Post"
          git add .
          git commit -m "${{ steps.dump-issue-json.outputs.action }} issue ${{ steps.dump-issue-json.outputs.issue-number }}.json"
          echo "output: ${{ join(steps.dump-issue-json.outputs.*, ', ') }}"
          echo "targets: ${{ steps.dump-issue-json.outputs.targets }}"
          echo "targets0: ${{ steps.dump-issue-json.outputs.targets[0] }}"
          echo "targets1: ${{ steps.dump-issue-json.outputs.targets[1] }}"
          echo "targets*: ${{ steps.dump-issue-json.outputs.targets[*] }}"
          git push
