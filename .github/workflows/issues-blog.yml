name: Issues Blog

# run-name:

on:
  # TODO consider pushes on other branches or limiting to pushes on specific branches?
  push:
    paths:
      - dist/**
      - public/**
      - template/**
  issues:
    types: [opened, edited, deleted, transferred, pinned, unpinned, closed, reopened, assigned, unassigned, labeled, unlabeled, locked, unlocked, milestoned, demilestoned]
  workflow_dispatch:

jobs:
  # TODO commented out for now
  # https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#list-repository-collaborators
  # https://docs.github.com/en/rest/collaborators/collaborators?apiVersion=2022-11-28#check-if-a-user-is-a-repository-collaborator
  # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
  # https://docs.github.com/en/webhooks/webhook-events-and-payloads?actionType=opened#issues
  # check-auth:
  #   # allows for public repos with a whitelist of authorized contributors
  #   # TODO whitelist and contributor lookup
  #   name: Delete unauthorized issues
  #   if: ${{ github.event.action == 'opened' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4

  #     - name: Delete issue
  #       run: |
  #         gh issue delete $ISSUE --yes
  #         echo "::error title=Deleted issue #$ISSUE::Opened by @$USER (not a contributor or in whitelist)"
  #       env:
  #         # TODO need a PAT here annoyingly
  #         # GITHUB_TOKEN doesn't have admin rights...
  #         # https://github.com/orgs/community/discussions/24302
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         ISSUE: ${{ github.event.issue.number }}
  #         USER: ${{ github.event.sender.login }}

  sync-issues:
    name: Sync issues
    if: ${{ github.event.issue.state == 'closed' || github.event.issue.state == 'deleted' || github.event.issue.state == 'transferred' }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.issue.number }}
      cancel-in-progress: true
    steps:
      - name: Checkout issues branch
        id: checkout-issues
        continue-on-error: true
        with:
          ref: issues
        uses: actions/checkout@v4

      - name: Create issues branch
        if: ${{ steps.checkout-issues.outcome == 'failure' }}
        run: |
          git checkout --orphan issues
          git config --local user.email "action@github.com"
          git config --local user.name "Github Action"
          git commit --allow-empty -m "Initial commit"
          git push -u origin issues
          echo "::notice ::No branch found, created issues branch"

      # TODO filter out stuff from the blacklist/whitelist
      # delete issues not made by the opener?
      # https://docs.github.com/en/actions/managing-issues-and-pull-requests/closing-inactive-issues
      - name: Store issue as JSON
        id: issue-to-json
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let changesSummary
            if (context.payload.changes) {
              changesSummary = ' ' + Object.keys(context.payload.changes).reduce((a, c, i, arr) => {
                if (i === 0) return c
                if (i === arr.length - 1) return `${a} & ${c}`
                return `${a}, ${c}`
              }, '')
            }
            const message = `${context.payload.action} issue #${context.issue.number}${changesSummary || ''}`
            core.notice(message)

            const fs = require('fs')
            if (context.issue.state === 'deleted' || context.issue.state === 'transferred') {
              fs.unlink(`issue-${context.issue.number}.json`)
              core.warning(`Deleted issue-${context.issue.number}.json`)
            } else {
              fs.writeFileSync(`issue-${context.issue.number}.json`, JSON.stringify(context.payload.issue, null, 2))
            }

            return `Issue sync: message`
          result-encoding: string

      - name: Commit and push
        run: |
          echo $(git diff)
          if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "Github Action"
            git add .
            git commit -m "${{ steps.issue-to-json.outputs.result }}"
            git pull --rebase
            git push
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "::warning ::Nothing to commit, not rebuilding or deploying"
          fi

  build:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    name: Build static site
    # if sync doesn't run, fine, if sync does run, we need it
    needs: sync-issues
    # TODO more complicated dependency on sync issues
    if: ${{ !failure() && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Checkout issues branch
        continue-on-error: true
        with:
          path: issues
          ref: issues
        uses: actions/checkout@v4

      - name: Template & build static files
        continue-on-error: false
        run: node dist/index.js

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    name: Deploy to Github Pages

    needs: build
    # TODO it's very annoying that we cant access other jobs here
    # like the steps context jobs.build.result == 'success'
    # this condition could use some work
    if: ${{ !failure() && !cancelled() }}

    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4