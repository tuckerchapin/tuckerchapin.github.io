name: Issues Blog

# TODO should figure out how to make this publishable
# whole workflows/multiple jobs don't seem to be publishable
# so this would need to be unified and simplified possibly to be a single job
# or can just make the repo a template?

on:
  push:
    paths:
      - dist/**
      - public/**
      - template/**
  issues:
    types: [opened, edited, deleted, transferred, pinned, unpinned, closed, reopened, assigned, unassigned, labeled, unlabeled, locked, unlocked, milestoned, demilestoned]
  issue_comment:
    types: [created, edited, deleted]
  workflow_dispatch:

jobs:
  # TODO set up an allowlist
  check-auth:
    name: Delete unauthorized issues
    if: ${{ github.event_name == 'issues' && github.event.action == 'opened' && github.event.issue.author_association != 'OWNER' && github.event.issue.author_association != 'CONTRIBUTOR'}}
    runs-on: ubuntu-latest
    steps:
      - run: |
          gh issue delete $ISSUE --yes
          echo "::warning ::Deleted issue #$ISSUE opened by @$USER"
        env:
          # need a PAT here annoyingly
          # GITHUB_TOKEN doesn't have admin rights...
          # https://github.com/orgs/community/discussions/24302
          GH_TOKEN: ${{ secrets.PAT }}
          ISSUE: ${{ github.event.issue.number }}
          USER: ${{ github.event.sender.login }}

  sync-issues:
    name: Sync issues
    runs-on: ubuntu-latest
    needs: check-auth
    if: always() && (github.event_name == 'issues' || github.event_name == 'issue_comment') && (needs.check-auth.result == 'skipped' || needs.check-auth.result == 'success')
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.issue.number }}
      cancel-in-progress: true
    steps:
      - name: Checkout issues branch
        id: checkout-issues
        continue-on-error: true
        with:
          ref: issues
        uses: actions/checkout@v4

      - name: Create issues branch
        if: ${{ steps.checkout-issues.outcome == 'failure' }}
        run: |
          git checkout --orphan issues
          git config --local user.email "action@github.com"
          git config --local user.name "Github Action"
          git commit --allow-empty -m "Initial commit"
          git push -u origin issues
          echo "::notice ::No branch found, created issues branch"

      - name: Store issue as JSON
        id: issue-to-json
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const capitalize = s => s && s[0].toUpperCase() + s.slice(1)
            let changesSummary
            if (context.payload.changes) {
              changesSummary = ' ' + Object.keys(context.payload.changes).reduce((a, c, i, arr) => {
                if (i === 0) return c
                if (i === arr.length - 1) return `${a} & ${c}`
                return `${a}, ${c}`
              }, '')
            }
            const message = `${capitalize(context.payload.action)} issue #${context.issue.number}${changesSummary || ''}`
            const filename = `issue-${context.issue.number}.json`
            const fs = require('fs')
            if (context.payload.action === 'deleted' || context.payload.action === 'transferred') {
              fs.unlinkSync(filename)
              core.warning(message)
            } else {
              fs.writeFileSync(filename, JSON.stringify(context.payload.issue, null, 2))
              core.notice(message)
            }

            return `Issue sync: ${message}`
          result-encoding: string

      - name: Commit and push
        run: |
          echo $(git diff)
          if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "Github Action"
            git add .
            git commit -m "${{ steps.issue-to-json.outputs.result }}"
            git pull --rebase
            git push
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "::warning ::Nothing to commit, not rebuilding or deploying"
          fi

  build:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    name: Build static site
    # if sync doesn't run, fine, if sync does run, we need it
    needs: sync-issues
    if: ${{ !failure() && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Checkout issues branch
        continue-on-error: true # if the branch doesn't exist that's fine
        with:
          path: issues
          ref: issues
        uses: actions/checkout@v4

      - name: Template & build static files
        continue-on-error: false
        run: node dist/index.js

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    name: Deploy to Github Pages
    needs: build
    if: always() && needs.build.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4